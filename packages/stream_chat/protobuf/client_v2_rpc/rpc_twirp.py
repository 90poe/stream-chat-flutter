# -*- coding: utf-8 -*-
# Generated by https://github.com/verloop/twirpy/protoc-gen-twirpy.  DO NOT EDIT!
# source: chat/client_v2_rpc/rpc.proto

from google.protobuf import symbol_database as _symbol_database

from twirp.base import Endpoint
from twirp.server import TwirpServer
from twirp.client import TwirpClient

_sym_db = _symbol_database.Default()

class ClientRPCServer(TwirpServer):

	def __init__(self, *args, service, server_path_prefix="/twirp"):
		super().__init__(service=service)
		self._prefix = F"{server_path_prefix}/stream.chat.client_v2_rpc.ClientRPC"
		self._endpoints = {
			"GetChannel": Endpoint(
				service_name="ClientRPC",
				name="GetChannel",
				function=getattr(service, "GetChannel"),
				input=_sym_db.GetSymbol("stream.chat.client_v2_rpc.GetChannelRequest"),
				output=_sym_db.GetSymbol("stream.chat.client_v2_rpc.GetChannelResponse"),
			),
			"QueryChannels": Endpoint(
				service_name="ClientRPC",
				name="QueryChannels",
				function=getattr(service, "QueryChannels"),
				input=_sym_db.GetSymbol("stream.chat.client_v2_rpc.QueryChannelsRequest"),
				output=_sym_db.GetSymbol("stream.chat.client_v2_rpc.QueryChannelsResponse"),
			),
		}

class ClientRPCClient(TwirpClient):

	def GetChannel(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/stream.chat.client_v2_rpc.ClientRPC/GetChannel",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("stream.chat.client_v2_rpc.GetChannelResponse"),
			**kwargs,
		)

	def QueryChannels(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/stream.chat.client_v2_rpc.ClientRPC/QueryChannels",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("stream.chat.client_v2_rpc.QueryChannelsResponse"),
			**kwargs,
		)
