syntax = "proto3";

package stream.chat.channel_v2;

import "message_v2/message.proto";
import "user_v2/user.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/GetStream/stream-services/protobuf/chat/channel_v2;channel_v2";

// Channel represents core channel entity
message Channel {
  // The uniquely identifies a channel inside channel type. Channel type and
  // channel ID form channel CID in format <type>:<id>.
  string id = 1;

  // The channel type that this channel refers to. Channel type and channel
  // ID form channel CID in format <type>:<id>.
  string type = 2;

  // created_by_id is an ID of the User who created the channel. Ownership
  // of the channel usually grants additional perimssions to the channel.
  // It's important to note that channel owner is not necessarily a channel
  // member. All channel members have to be added explicitly.
  string created_by_id = 3;

  // Whether the channel is disabled.
  bool disabled = 4;

  // team is a team name that this channel belongs to. Only used for multi-tenant
  // applications. If empty, channel belongs to "empty" team.
  string team = 5;

  // Contains core channel settings
  ChannelSettings settings = 6;

  // Contains channel summary statistics that are subject of the frequent change.
  ChannelStats stats = 7;

  // Contains channel translation settings.
  ChannelTranslation translation = 8;

  // Contains channel truncation information. If empty - channel was never truncated
  ChannelTruncationStatus truncated = 9;

  // Contains the list of commands that the channel supports.
  repeated ChannelCommand commands = 10;

  // custom is a JSON object which contains any channel data. This data can be
  // used for sorting, filtering and data organization.
  bytes custom_json = 11;

  // The timestamp of channel creation.
  google.protobuf.Timestamp created_at = 12;

  // The timestamp of last channel update.
  google.protobuf.Timestamp updated_at = 13;

  // The timestamp of channel deletion. If it's empty - channel is not
  // deleted. Otherwise, channel was soft-deleted.
  google.protobuf.Timestamp deleted_at = 14;
}

// Contains core channel settings.
message ChannelSettings {
  // Whether the channel is frozen. It's not possible to send new messages
  // and reaction to the frozen channel.
  bool frozen = 1;

  // A number of seconds that should pass between messages of the single
  // user. It is used to implement "slow mode" feature.
  int64 cooldown = 2;

  // Maximum length of a message (number of unicode characters).
  int64 max_message_length = 3;
}

// Contains channel translation settings.
message ChannelTranslation {
  // If Stream should automatically translate messages.
  bool auto_translation_enabled = 1;

  // The language code of the translation.
  string auto_translation_language = 2;
}

// Contains channel summary statistics that are subject of the frequent change.
message ChannelStats {
  // Number of members that are in the channel. This field is eventually
  // consistent for channels with high number of members
  int64 member_count = 1;

  // A timestamp of the last message sent to the channel. This field is
  // eventually consistent for channels with very high message rates
  google.protobuf.Timestamp last_message_at = 2;
}

// Contains channel truncation information.
message ChannelTruncationStatus {
  // A date of channel truncation. Chat history is only available starting
  // from this date.
  google.protobuf.Timestamp truncated_at = 1;

  // ID of the user who truncated the channel. If it's empty, the channel
  // was truncated using server-side request.
  string truncated_by_id = 2;
}

// A view that represents channel and core entities surrounding it.
message ChannelView {
  // Contains core channel information.
  Channel channel = 1;

  // Creator of the channel.
  stream.chat.user_v2.User created_by = 2;

  // Channel members. Only fist 100 members are provided in this field.
  repeated ChannelMemberView members = 3;

  // Latest channel messages sorted ascendingly by the creation date.
  // The number of messages in
  repeated stream.chat.message_v2.MessageView messages = 4;
}

// Represents user's membership inside the channel.
message ChannelMember {
  // User ID the this channel member represents.
  string user_id = 1;

  // User's role in the channel.
  string channel_role = 2;

  // Contains invitation information. If it's not provided channel
  // member was not invited, but added directly.
  ChannelMemberInvitation invitation = 3;

  // Contains ban information. If it's not provided channel member
  // is not banned.
  ChannelMemberBan ban = 4;

  // Date of channel member creation.
  google.protobuf.Timestamp created_at = 5;

  // Date of last channel member update.
  google.protobuf.Timestamp updated_at = 6;
}

// A view of ChannelMember that contains extra information.
message ChannelMemberView {
  // ChannelMember that this view is for.
  ChannelMember channel_member = 1;

  // A view which contains user information.
  stream.chat.user_v2.User user = 2;
}

// Contains channel member invitation data.
message ChannelMemberInvitation {
  // Contains the date of invitation acception. If it's empty,
  // the invitation was not accepted.
  google.protobuf.Timestamp accepted_at = 1;

  // Contains the date of invitation rejection. If it's empty,
  // the invitation was not rejected.
  google.protobuf.Timestamp rejected_at = 2;
}

// Contains channel member ban information.
message ChannelMemberBan {
  // Expiration date of the ban.
  google.protobuf.Timestamp expires_at = 1;

  // Whether the channel member was shadow banned.
  bool shadow = 2;
}

// ChannelIdentifier identifies channel with either type and ID pair or type + list of members
message ChannelIdentifier {
  // Channel type
  string type = 1;

  // Channel ID
  // Either id or member_ids should be used, not both
  string id = 2;

  // List of channel members (for distinct channels).
  // Either id or member_ids should be used, not both
  repeated string member_ids = 3;
}

// Contains information about the command.
message ChannelCommand {
  // Unique command name.
  string name = 1;

  // Description, shown in commands auto-completion.
  string description = 2;

  // Arguments help text, shown in commands auto-completion.
  string args = 3;

  // Set name used for grouping commands.
  string set = 4;

  // Date of command creation.
  google.protobuf.Timestamp created_at = 5;

  // Date of last command update.
  google.protobuf.Timestamp updated_at = 6;
}
